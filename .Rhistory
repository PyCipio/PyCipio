as_tsibble(key = c(confirmed, administrative_area_level_2), index = date) %>%
select(c(date, confirmed, administrative_area_level_2)) %>%
#Subset states
filter(administrative_area_level_2 == "Oregon" |
administrative_area_level_2 == "Mississippi" |
administrative_area_level_2 == "Nevada")
tsi %>%
ggplot(aes(x = date, y = confirmed, color = administrative_area_level_2) ) +
geom_line()
View(tsi)
pacman::p_load(tidyverse, fpp3, tsibble, feasts, fable)
#load USA sample data covid (statewise)
data <- read.csv(file = "sample_data.csv", header = T)
#Create tsibble
tsi <- data %>%
mutate(date = as_date(date)) %>%
as_tsibble(key = c(confirmed, administrative_area_level_2), index = date) %>%
select(c(date, confirmed, administrative_area_level_2)) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" )
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
View(tsi)
#load USA sample data covid (statewise)
data <- read.csv(file = "sample.csv", header = T)
#load USA sample data covid (statewise)
getwd()
#load USA sample data covid (statewise)
getwd()
data <- read.csv(file = "code/sample.csv", header = T)
#Create tsibble
tsi <- data %>%
mutate(date = as_date(date)) %>%
as_tsibble(key = c(confirmed, administrative_area_level_2), index = date) %>%
select(c(date, confirmed, administrative_area_level_2)) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" )
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
View(tsi)
View(data)
View(tsi)
tsi %>%
ggplot(aes(x = date, y = confirmed, color = administrative_area_level_2) ) +
geom_line()
#Create tsibble
tsi <- data %>%
mutate(date = as_date(date)) %>%
as_tsibble(key = c(confirmed, administrative_area_level_2), index = date_idx) %>%
select(c(date, new_infected, administrative_area_level_2)) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" )
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
#Create tsibble
tsi <- data %>%
mutate(date = as_date(date)) %>%
as_tsibble(key = c(confirmed, administrative_area_level_2), index = date_idx) %>%
select(c(date_idx, new_infected, administrative_area_level_2)) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" )
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
tsi %>%
ggplot(aes(x = date, y = confirmed, color = administrative_area_level_2) ) +
geom_line()
tsi %>%
ggplot(aes(x = date_idx, y = confirmed, color = administrative_area_level_2) ) +
geom_line()
#Create tsibble
tsi <- data %>%
mutate(date = as_date(date)) %>%
as_tsibble(key = c(new_infected, administrative_area_level_2), index = date_idx) %>%
select(c(date_idx, new_infected, administrative_area_level_2)) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" )
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
tsi %>%
ggplot(aes(x = date_idx, y = confirmed, color = administrative_area_level_2) ) +
geom_line()
tsi %>%
ggplot(aes(x = date_idx, y = new_infected, color = administrative_area_level_2) ) +
geom_line()
sorted = sort(sample(nrow(tsi), nrow(tsi)*.75))
train <- tsi[sorted,]
test <- tsi[-sorted,]
hh_fit <- train %>%
model(
Mean = MEAN(new_infected),
Naive = NAIVE(new_infected),
sNAIVE = SNAIVE(new_infected),
Drift = RW(new_infected ~ drift())
)
View(tsi)
View(train)
str(train)
pacman::p_load(tidyverse, fpp3, tsibble, feasts, fable)
#load USA sample data covid (statewise)
getwd()
data <- read.csv(file = "code/sample.csv", header = T)
#Create tsibble
tsi <- data %>%
#mutate(date = as_date(date)) %>%
as_tsibble(key = c(new_infected, administrative_area_level_2), index = date_idx) %>%
select(c(date_idx, new_infected, administrative_area_level_2)) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" )
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
str(tsi)
View(data)
#Create tsibble
tsi <- data %>%
#mutate(date = as_date(date)) %>%
as_tsibble(key = c(new_infected, administrative_area_level_2), index = date_idx) %>%
select(c(date_idx, new_infected, administrative_area_level_2)) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" ) %>%
select(-c("index"))
str(tsi)
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
#Create tsibble
tsi <- data %>%
#mutate(date = as_date(date)) %>%
as_tsibble(key = c(new_infected, administrative_area_level_2), index = date_idx) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" ) %>%
select(c(date_idx, new_infected, administrative_area_level_2))
str(tsi)
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
#mutate(date = as_date(date)) %>%
as_tsibble(key = c(new_infected, administrative_area_level_2), index = date_idx) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" ) %>%
select(c(date_idx, new_infected, administrative_area_level_2))
str(tsi)
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
View(tsi)
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
#mutate(date = as_date(date)) %>%
as_tsibble(index = date_idx) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" ) %>%
select(c(date_idx, new_infected, administrative_area_level_2))
#key = c(new_infected, administrative_area_level_2)
str(tsi)
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
View(tsi)
tsi %>%
ggplot(aes(x = date_idx, y = new_infected, color = administrative_area_level_2) ) +
geom_line()
sorted = sort(sample(nrow(tsi), nrow(tsi)*.75))
train <- tsi[sorted,]
test <- tsi[-sorted,]
hh_fit <- train %>%
model(
Mean = MEAN(new_infected),
Naive = NAIVE(new_infected),
sNAIVE = SNAIVE(new_infected),
Drift = RW(new_infected ~ drift())
)
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
#mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" ) %>%
select(c(new_infected, administrative_area_level_2))
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
#mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" ) %>%
select(c(date, new_infected, administrative_area_level_2))
str(data)
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" ) %>%
select(c(date, new_infected, administrative_area_level_2))
#key = c(new_infected, administrative_area_level_2)
str(data)
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
#key = c(new_infected, administrative_area_level_2)
str(tsi)
tsi %>%
ggplot(aes(x = date_idx, y = new_infected, color = administrative_area_level_2) ) +
geom_line()
tsi %>%
ggplot(aes(x = date, y = new_infected, color = administrative_area_level_2) ) +
geom_line()
sorted = sort(sample(nrow(tsi), nrow(tsi)*.75))
train <- tsi[sorted,]
test <- tsi[-sorted,]
hh_fit <- train %>%
model(
Mean = MEAN(new_infected),
Naive = NAIVE(new_infected),
sNAIVE = SNAIVE(new_infected),
Drift = RW(new_infected ~ drift())
)
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" ) %>%
select(c(date, new_infected, administrative_area_level_2)) %>%
tsibble::fill_gaps()
#key = c(new_infected, administrative_area_level_2)
str(tsi)
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
tsi %>%
ggplot(aes(x = date, y = new_infected, color = administrative_area_level_2) ) +
geom_line()
sorted = sort(sample(nrow(tsi), nrow(tsi)*.75))
train <- tsi[sorted,]
test <- tsi[-sorted,]
hh_fit <- train %>%
model(
Mean = MEAN(new_infected),
Naive = NAIVE(new_infected),
sNAIVE = SNAIVE(new_infected),
Drift = RW(new_infected ~ drift())
)
hh_fit <- train %>%
tsibble::fill_gaps() %>%
model(
Mean = MEAN(new_infected),
Naive = NAIVE(new_infected),
sNAIVE = SNAIVE(new_infected),
Drift = RW(new_infected ~ drift())
)
# predict
hh_pred <- hh_fit %>% forecast(h = 108)
hh_pred
pacman::p_load(GGally, ggthemes, ggfortify)
## put it together (do this properly without autoplot).
hh_pred %>%
autoplot(tsi, level = NULL) +
geom_vline(xintercept = max(train$date), lty = 2)
## put it together (do this properly without autoplot).
hh_pred %>%
autoplot(test, level = NULL) +
geom_vline(xintercept = max(train$date), lty = 2) +
## put it together (do this properly without autoplot).
hh_pred %>%
autoplot(test, level = NULL) +
geom_vline(xintercept = max(train$date), lty = 2)
## put it together (do this properly without autoplot).
hh_pred %>%
autoplot(tsi, level = NULL) +
geom_vline(xintercept = max(train$date), lty = 2)
View(train)
View(test)
sorted = floor(nrow(tsi)*.75)
train <- tsi[sorted,]
test <- tsi[-sorted,]
sorted = floor(nrow(tsi)*.75)
train <- slice_head(sorted)
train <- tsi %>%
slice_head(sorted)
train <- tsi %>%
slice_head(n = sorted)
sorted = floor(nrow(tsi)*.75)
train <- tsi %>%
slice_head(n = sorted)
test <- tsi %>%
slice_tail(n = length(tsi)-sorted)
sorted = floor(nrow(tsi)*.75)
train <- tsi %>%
slice_head(n = sorted)
test <- tsi %>%
slice_tail(n = sorted-length(tsi))
View(test)
sorted-length(tsi)
length(tsi)
length(tsi$date)
sorted-length(tsi$date)
sorted = floor(nrow(tsi)*.75)
train <- tsi %>%
slice_head(n = sorted)
test <- tsi %>%
slice_tail(n = length(tsi$date)-sorted)
View(test)
pacman::p_load(tidyverse, fpp3, tsibble, feasts, fable)
#load USA sample data covid (statewise)
getwd()
data <- read.csv(file = "code/sample.csv", header = T)
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado" ) %>%
select(c(date, new_infected, administrative_area_level_2))
#key = c(new_infected, administrative_area_level_2)
str(tsi)
#|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada"
tsi %>%
ggplot(aes(x = date, y = new_infected, color = administrative_area_level_2) ) +
geom_line()
sorted = floor(nrow(tsi)*.75)
train <- tsi %>%
slice_head(n = sorted)
test <- tsi %>%
slice_tail(n = length(tsi$date)-sorted)
hh_fit <- train %>%
tsibble::fill_gaps() %>%
model(
Mean = MEAN(new_infected),
Naive = NAIVE(new_infected),
sNAIVE = SNAIVE(new_infected),
Drift = RW(new_infected ~ drift())
)
# predict
hh_pred <- hh_fit %>% forecast(h = 108)
hh_pred
pacman::p_load(GGally, ggthemes, ggfortify)
## put it together (do this properly without autoplot).
hh_pred %>%
autoplot(tsi, level = NULL) +
geom_vline(xintercept = max(train$date), lty = 2)
pacman::p_load(tidyverse, fpp3, tsibble, feasts, fable)
#load USA sample data covid (statewise)
getwd()
data <- read.csv(file = "code/sample.csv", header = T)
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado"|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada" ) %>%
select(c(date, new_infected, administrative_area_level_2))
tsi %>%
ggplot(aes(x = date, y = new_infected, color = administrative_area_level_2) ) +
geom_line()
pacman::p_load(tidyverse, fpp3, tsibble, feasts, fable)
#load USA sample data covid (statewise)
getwd()
data <- read.csv(file = "code/sample.csv", header = T)
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado"|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada" ) %>%
select(c(date, new_infected, administrative_area_level_2))
View(tsi)
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado"|administrative_area_level_2 == "Mississippi" | administrative_area_level_2 == "Nevada" ) %>%
select(c(date, new_infected, administrative_area_level_2))
pacman::p_load(tidyverse, fpp3, tsibble, feasts, fable)
#load USA sample data covid (statewise)
getwd()
train <- read.csv(file = "data/usa_corona.csv", header = T)
#load USA sample data covid (statewise)
getwd()
data <- read.csv(file = "data/usa_corona.csv", header = T)
pacman::p_load(tidyverse, fpp3, tsibble, feasts, fable)
#load USA sample data covid (statewise)
getwd()
data <- read.csv(file = "data/usa_corona.csv", header = T)
#Create tsibble
tsi <- data %>%
select(-c(index)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado"|administrative_area_level_2 == "Mississippi" | administrative_area_level_2 == "Nevada" ) %>%
select(c(date, new_infected, administrative_area_level_2))
View(data)
#Create tsibble
tsi <- data %>%
select(-c(index, X)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado"|administrative_area_level_2 == "Mississippi" | administrative_area_level_2 == "Nevada" ) %>%
select(c(date, new_infected, administrative_area_level_2))
data %>% duplicates()
data %>% duplicates(date)
View(data)
#load USA sample data covid (statewise)
getwd()
data <- read.csv(file = "data/usa_corona.csv", header = T)
#Create tsibble
tsi <- data %>%
select(-c(index, X)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado"|administrative_area_level_2 == "Mississippi" | administrative_area_level_2 == "Nevada" ) %>%
select(c(date, new_infected, administrative_area_level_2))
#Create tsibble
tsi <- data %>%
select(-c(index, X)) %>%
mutate(date = as_date(date)) %>%
#as_tsibble(index = date) %>%
#Subset states
# filter(administrative_area_level_2 == "Colorado"|administrative_area_level_2 == "Mississippi" | administrative_area_level_2 == "Nevada" ) %>%
#select(c(date, new_infected, administrative_area_level_2))
#Create tsibble
tsi <- data %>%
select(-c(index, X)) %>%
mutate(date = as_date(date)) #%>%
#as_tsibble(index = date) %>%
#Subset states
# filter(administrative_area_level_2 == "Colorado"|administrative_area_level_2 == "Mississippi" | administrative_area_level_2 == "Nevada" ) %>%
#select(c(date, new_infected, administrative_area_level_2))
#Create tsibble
tsi <- data %>%
select(-c(index, X)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(key = administrative_area_level_2, index = date) %>%
#Subset states
filter(administrative_area_level_2 == "Colorado"|administrative_area_level_2 == "Mississippi" |  administrative_area_level_2 == "Nevada" ) %>%
select(c(date, new_infected, administrative_area_level_2))
View(tsi)
#Create tsibble
tsi <- data %>%
select(-c(index, X)) %>%
mutate(date = as_date(date)) %>%
as_tsibble(key = administrative_area_level_2, index = date) %>%
#Subset states
filter(administrative_area_level_2 %in% c("New York", "Mississippi", "New Jersey", "Nevada", "Colorado" )) %>%
select(c(date, new_infected, administrative_area_level_2))
pacman::p_load(tidyverse, fpp3, tsibble, feasts, fable)
data <- read.csv(file = "data/archive/Alcohol_Sales.csv", header = T)
tsi <- data %>%
mutate(date = as_date(DATE), sales = S4248SM144NCEN, yearmonth = yearmonth(date) ) %>%
as_tsibble(index = yearmonth) %>%
select(c(yearmonth, sales))
tsi %>%
ggplot(aes(x = yearmonth, y = sales)) +
geom_line()
smp_size <- floor(0.75 * nrow(tsi))
train <- tsi[1:smp_size, ]
test <- tsi[(smp_size+1):length(tsi$sales), ]
hh_fit <- train %>%
tsibble::fill_gaps() %>%
model(
Mean = MEAN(sales),
ets = ETS(sales),
Naive = NAIVE(sales),
sNAIVE = SNAIVE(sales),
Drift = RW(sales ~ drift()),
Arima = ARIMA(sales)
)
hh_pred <- hh_fit %>% forecast(h = 82)
hh_pred
hh_pred %>%
autoplot(tsi, level = NULL) +
geom_vline(xintercept = as_date("2012-03-01"), lty = 2)
vector_mu = c()
vector_sigma = c()
for (val in 1:length(hh_pred$sales)) {
vector_mu[val] <- hh_pred[[3]][[val]]$mu
vector_sigma[val] <- hh_pred[[3]][[val]]$sigma
}
hh_pred = hh_pred %>%
mutate(mu = vector_mu, sigma = vector_sigma)
#write.csv(hh_pred,"data/fpp3_alcohol_predictions.csv")
data2 <- read.csv(file = "data/archive/BeerWineLiquor.csv", header = T)
tsi2 <- data2 %>%
mutate( yearmonth = yearmonth(date) ) %>%
as_tsibble(index = yearmonth) %>%
select(c(yearmonth, beer))
tsi2 %>%
ggplot(aes(x = yearmonth, y = beer)) +
geom_line()
smp_size2 <- floor(0.75 * nrow(tsi2))
train2 <- tsi2[1:smp_size2, ]
test2 <- tsi2[(smp_size2+1):length(tsi2$beer), ]
hh_fit2 <- train2 %>%
model(
Mean = MEAN(beer),
ets = ETS(beer),
Naive = NAIVE(beer),
sNAIVE = SNAIVE(beer),
Drift = RW(beer ~ drift()),
Arima = ARIMA(beer)
)
hh_pred2 <- hh_fit2 %>% forecast(h = 82)
hh_pred2
vector_mu2 = c()
vector_sigma2 = c()
for (val in 1:length(hh_pred2$beer)) {
vector_mu2[val] <- hh_pred2[[3]][[val]]$mu
vector_sigma2[val] <- hh_pred2[[3]][[val]]$sigma
}
hh_pred2 = hh_pred2 %>%
mutate(mu = vector_mu2, sigma = vector_sigma2)
hh_pred2 %>%
autoplot(tsi2) +
geom_vline(xintercept = as_date("2012-03-01"), lty = 2)
#write.csv(hh_pred2,"data/fpp3_liquor_predictions.csv")
